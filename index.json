[{"categories":["随笔"],"content":" 《娱乐至死》是美国批评家尼尔·波兹曼在1985年写成出版的，这本书主要阐述了在二十世纪后半叶美国文化中的重大变化也就是电视业的蓬勃发展和传统印刷业的没落所带来的诸多问题的批判和思考。 在传统印刷业，也就是所谓的“阐释时代”，信息的组织是具有逻辑和语境的，人们从中获得了思考和智慧。而随着电视的普及，进入电视时代的人们更愿意接受娱乐化的信息，而渐渐排斥原本具有严肃性的东西。一开始，很多严肃的新闻或者具有教育意义的节目，也都是通过电视来呈现给大众的，但久而久之，由于各种各样的原因，这些原本具有严肃性的东西等也都纷纷向娱乐靠拢。 似乎一切的内容都以娱乐的形式呈现，大量的信息充斥在人们的生活中，信息变得碎片化。虽然看似我们从电视中获取了很多新闻资讯、很多知识，但是这些信息是没有语境和逻辑的，我们并没有主动去思考或者说已经没有机会去思考这里面的真假，很多观点都是别人整理好后塞给我们的。 我们通过电视媒体，给自己制造了获取很多知识的假象，我们已经很少去真正思考信息的来源以及信息的真假，只是被动地接受，最后，看似收获了很多知识，实则一无所获。 进入互联网时代也是一样，我们心甘情愿的沦为娱乐的附庸，无脑的享受着各种各样的新闻、娱乐资讯，刷微博，刷抖音，刷b站，越来越偏向于不动大脑的开怀大笑，最后成为一个娱乐至死的物种。 读完这本书，我才后知后觉，过去做过的很多事情，譬如看了很多电影、书、纪录片，实际上我真正深入思考的有多少？就算是我爱看的历史纪录片，事实上更多时候我也是听听故事，并没有多少时刻去认真思考整个历史事件的起因、经过和结局对于历史的推进作用。 当然，如果生活中只存在严肃性的东西，禁止一切娱乐，那也太矫枉过正了，显得生活太枯燥。我们不应该禁止娱乐，更正确的方式，我想应该是减少娱乐的时间，只在碎片化的时间段内浏览一些娱乐资讯，更多大块的时间用来读书和思考，真正提高个人整体素质和境界。 ","date":"2021-06-17","objectID":"/amusing-to-death/:0:0","tags":[],"title":"娱乐至死","uri":"/amusing-to-death/"},{"categories":[],"content":"添加评论系统 启用评论系统utterances 在hugo的配置文件（config.toml）中启用utterances，打开config.toml，添加如下： # Utterances comment 评论系统设置 (https://utteranc.es/) [params.page.comment.utterances] enable = true # owner/repo repo = \"YourUsername/YourUsername.github.io\" ##自己的github仓库地址 issueTerm = \"pathname\" label = \"\" lightTheme = \"github-light\" darkTheme = \"github-dark\" repo的格式为：github用户名/创建的仓库名 github上安装 utterances 首先必须在 github 上进行安装 utterances，访问 utterances应用程序 然后点击 Install 按钮进行安装。 在这里可以选择可以关联的存储库，可以选择我们所拥有的库(也包括未来建立的库)或者某一个仓库，这里只选择某一个需要进行评论的库，这样比较好。 安装完成即可，随后访问 utterances应用程序 就不再是安装而是是执行配置项目。 此时服务端配置已经完成，接着访问博客测试下评论。 ","date":"2021-06-04","objectID":"/theme-seo/:0:1","tags":[],"title":"主题优化-添加评论系统和内置搜索","uri":"/theme-seo/"},{"categories":[],"content":"内置搜索系统（暂未实现） 实现原理： 每次把博客编译成静态文章，同时生成所有文章的索引保存在json文件中，然后上传至algolia搜索账号中，algolia通过本地配置的appid和key实现连接，并提供搜索服务。 ","date":"2021-06-04","objectID":"/theme-seo/:0:2","tags":[],"title":"主题优化-添加评论系统和内置搜索","uri":"/theme-seo/"},{"categories":[],"content":"Google-SRE教程 ","date":"2021-06-04","objectID":"/links/:0:0","tags":[],"title":"学习资料","uri":"/links/"},{"categories":[],"content":"wiki–运维文档 此社区目的有两点： 1.共同整理出标准文档，进行持续维护，方便大家查阅使用 2.一起研究出一些东西出来，推动国内的运维技术发展 ","date":"2021-06-04","objectID":"/links/:0:1","tags":[],"title":"学习资料","uri":"/links/"},{"categories":[],"content":"K8s训练营 阳明的博客 GO example 中文版 鸟哥的Linux私房菜 ","date":"2021-06-04","objectID":"/links/:0:2","tags":[],"title":"学习资料","uri":"/links/"},{"categories":[],"content":" 感谢 @Ryan4Yin 提供了友链页面模板~ LoveIt主题菜单栏标签参考（https://zhaouncle.com） 在友链形成的网络中漫游，是一件很有意思的事情。 以前的人们通过信笺交流，而我们通过友链串联起一个「世界」。希望你我都能在这个「世界」中有所收获 注： 下方友链次序每次刷新页面随机排列。 ","date":"2021-05-31","objectID":"/friends/:0:0","tags":[],"title":"友链","uri":"/friends/"},{"categories":[],"content":"交换友链 如果你觉得我的博客有些意思，而且也有自己的独立博客，欢迎与我交换友链~ 可通过 Issues 或者评论区提交友链申请，格式如下： 站点名称：Yuepu`s Blog 站点地址: https://pingyangblog.com/ 个人形象：https://pingyangblog.com/images/avatar.jpg 站点描述：不急，但是不停~ // 以下为样例内容，按照格式可以随意修改 var myFriends = [ [\"https://chee5e.space\", \"https://chee5e.space/images/avatar.jpg\", \"@芝士部落格\", \"有思想，也有忧伤和理想，芝士就是力量\"], [\"https://blog.k8s.li/\", \"/avatar.png\", \"@木子\", \"垃圾佬、搬砖社畜、运维工程师 0) { var rndNum = Math.floor(Math.random()*myFriends.length); var friendNode = document.createElement(\"li\"); var friend_link = document.createElement(\"a\"), friend_img = document.createElement(\"img\"), friend_name = document.createElement(\"h4\"), friend_about = document.createElement(\"p\") ; friend_link.target = \"_blank\"; friend_link.href = myFriends[rndNum][0]; friend_img.src=myFriends[rndNum][1]; friend_name.innerText = myFriends[rndNum][2]; friend_about.innerText = myFriends[rndNum][3]; friend_link.appendChild(friend_img); friend_link.appendChild(friend_name); friend_link.appendChild(friend_about); friendNode.appendChild(friend_link); targetList.appendChild(friendNode); myFriends.splice(rndNum, 1); } .linkpage ul { color: rgba(255,255,255,.15) } .linkpage ul:after { content: \" \"; clear: both; display: block } .linkpage li { float: left; width: 48%; position: relative; -webkit-transition: .3s ease-out; transition: .3s ease-out; border-radius: 5px; line-height: 1.3; height: 90px; display: block } .linkpage h3 { margin: 15px -25px; padding: 0 25px; border-left: 5px solid #51aded; background-color: #f7f7f7; font-size: 25px; line-height: 40px } .linkpage li:hover { background: rgba(230,244,250,.5); cursor: pointer } .linkpage li a { padding: 0 10px 0 90px } .linkpage li a img { width: 60px; height: 60px; border-radius: 50%; position: absolute; top: 15px; left: 15px; cursor: pointer; margin: auto; border: none } .linkpage li a h4 { color: #333; font-size: 18px; margin: 0 0 7px; padding-left: 90px } .linkpage li a h4:hover { color: #51aded } .linkpage li a h4, .linkpage li a p { cursor: pointer; white-space: nowrap; text-overflow: ellipsis; overflow: hidden; line-height: 1.4; margin: 0 !important; } .linkpage li a p { font-size: 12px; color: #999; padding-left: 90px } @media(max-width: 460px) { .linkpage li { width:97% } .linkpage ul { padding-left: 5px } } ","date":"2021-05-31","objectID":"/friends/:1:0","tags":[],"title":"友链","uri":"/friends/"},{"categories":null,"content":"关于我 （有很多的绝望，但也有美的时刻，只不过在美的时刻，时间是不同于以往的。 ──《刺猬的优雅》） 保持独立思考，不急，但是不停。 昵称：乐谱 游戏：游戏热爱者，参与过MMORPG游戏《莽荒纪》（C++）的游戏模块开发和运维工作，也参与过H5游戏《九州幻境城》（lua）的服务端运维。 影视：看得最多的是动漫了，科幻、悬疑类型也很喜欢。 运动：跑步、游泳、登山。 编程语言： shell：工作语言。 Python：学习中。 曾经使用过但已经荒废的语言：Java|C++。 职业：运维工程师 目前主要以提升业务稳定性和服务响应为主的业务运维工作，目标是掌握python语言，成为运维开发工程师，并学习kubernetes，熟悉云原生技术圈，思考如何更好地利用这些技术优化基础设施，使基础设施能稳定高效地支撑业务不断成长。 理论基础：计算机网络和Linux 底层知识还很欠缺，数据结构和设计模式有时间可以看看，数据库、中间件等分布式原理知识知之甚少。还有太多需要补习的理论基础知识。 关于此博客 “对我来说，博客首先是一种知识管理工具，其次才是传播工具。我的技术文章，主要用来整理我还不懂的知识。我只写那些我还没有完全掌握的东西，那些我精通的东西，往往没有动力写。炫耀从来不是我的动机，好奇才是。\" ──阮一峰 目的是想让博客成为我在互联网世界的一张名片和一个入口。其实记录在哪里都能记录，现在移动端如此普及，但我更希望能创建一个统一的入口，能够对自己的所学所感进行思考和总结，使其以规范的方式展现出来。 注意事项 博客中的内容说到底也只是我一家之言，我只能尽量去减少错漏，但不能保证内容的正确性！ 因此请带着批判的眼光看待本博客中的任何内容。 话外 互联网浩如烟海，这个小站偏安一隅，如果它有幸被你发现，而且其中文字对你还有些帮助，那可真是太棒了！感谢有你~ 参考 Hugo 博客使用 utterances 作为评论系统 algolia官网 ","date":"2021-05-27","objectID":"/about/:0:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":[],"content":"hugo架构图hugo架构 \" hugo架构图 现在市面上的博客很多，如CSDN，博客园，简书等平台，可以直接在上面发表，用户交互做的好，写的文章百度也能搜索的到。缺点是比较不自由，会受到平台的各种限制和恶心的广告。 而自己购买域名和服务器，搭建博客的成本实在是太高了，不光是说这些购买成本，单单是花力气去自己搭这么一个网站，还要定期的维护它，对于我们大多数人来说，实在是没有这样的精力和时间。 那么就有第三种选择，直接在github page平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且Hugo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。 ","date":"2021-05-27","objectID":"/setup-hugo-blog/:0:0","tags":["搭建"],"title":"Hugo+GitHub Action+Github Pages搭建个人博客","uri":"/setup-hugo-blog/"},{"categories":[],"content":"前言 Hugo 是一个基于Go语言开发的静态博客框架，号称世界上最快的构建网站工具。本文是我在网上看的其他人的博客和一些up主的视频，通过他们的分享成功搭建好了的案例，在这里我也进行一次总结，方便以后使用。 ","date":"2021-05-27","objectID":"/setup-hugo-blog/:0:1","tags":["搭建"],"title":"Hugo+GitHub Action+Github Pages搭建个人博客","uri":"/setup-hugo-blog/"},{"categories":[],"content":"目的 通过把博客文章的源代码托管到GitHub仓库，利用GitHub Actions for Hugo功能持续集成部署，利用GitHub Pages实现网站的发布和访问，生成一个自己专属的个人博客网站。 ","date":"2021-05-27","objectID":"/setup-hugo-blog/:0:2","tags":["搭建"],"title":"Hugo+GitHub Action+Github Pages搭建个人博客","uri":"/setup-hugo-blog/"},{"categories":[],"content":"流程及原理 本地新建文章，push到 Github仓库的 main分支。main分支存放博客文章的源码。 push 操作自动触发预先配置的Actions。 GitHub Action自动执行yml文件中的\"action\"，构建打包，推送至gh-pages分支。 通过 Github Pages生成的 URL 访问即可。 ","date":"2021-05-27","objectID":"/setup-hugo-blog/:0:3","tags":["搭建"],"title":"Hugo+GitHub Action+Github Pages搭建个人博客","uri":"/setup-hugo-blog/"},{"categories":[],"content":"详细步骤 安装git和关联GitHub 这里我选择的是在Linux上搭建的，所以可以直接通过yum一条命令就能实现安装Git，其他平台的安装就不赘述了，自行百度下吧。 安装git yum install -y git 创建GitHub账户和仓库 没账号的登录GitHub创建账号，有账号的直接登录账号，点击右上角的加号—\u003eNew repository，创建一个仓库，名称必须为yourname.github.io, 其中yourname是你的github名称，按照这个规则创建才有用。点击Create repository完成创建。 本地Git关联远程的GitHub账户： 回到Linux中，用以下命令配置Github账户信息，用户名（Your Name）和邮箱（you@example.com）换成你自己的： git config --global user.email \"you@example.com\"； git config --global user.name \"Your Name\" 由于本地的 Git 仓库和 GitHub 仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息,使用以下命令生成 SSH Key： ssh-keygen -t rsa -C \"youremail@example.com\" 输入命令之后，直接三个回车即可，默认不需要设置密码； 找到~/.ssh 的文件夹中的 id_rsa.pub 密钥，将内容全部复制： cat ~/.ssh/id_rsa.pub 回到GitHub中-\u003eSettings-\u003eSSH and GPG keys，新建SSH Key: New SSH key，填入刚刚复制的内容，粘贴到github的输入框中，点击Add SSH key即可保存本地的秘钥到github账号。 验证是否关联成功： [root@web-blog public]# ssh -T git@github.com You've successfully authenticated, but GitHub does not provide shell access 安装Hugo 下载Hugo [root@web-blog ~]# wget https://github.com/gohugoio/hugo/releases/download/v0.80.0/hugo_0.80.0_Linux-64bit.tar.gz #解压后复制到bin目录 [root@web-blog ~]# tar -zxf hugo_0.80.0_Linux-64bit.tar.gz \u0026\u0026 cp hugo /use/local/bin #hugo version查看版本 [root@web-blog ~]# hugo version Hugo Static Site Generator v0.80.0-792EF0F4 linux/amd64 BuildDate: 2020-12-31T13:37:58Z 生成博客 命令：hugo new site myblog myblog为博客的目录名，可以修改为你自己想取的名字。 [root@web-blog ~]# hugo new site myblog Congratulations! Your new Hugo site is created in /root/myblog. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \"hugo new theme \u003cTHEMENAME\u003e\" command. 2. Perhaps you want to add some content. You can add single files with \"hugo new \u003cSECTIONNAME\u003e/\u003cFILENAME\u003e.\u003cFORMAT\u003e\". 3. Start the built-in live server via \"hugo server\". Visit https://gohugo.io/ for quickstart guide and full documentation. 下载主题 主题官网：https://themes.gohugo.io ，找到想要的主题，点进去，复制下载命令，我这里下载的是even主题，在myblog目录下： git clone https://github.com/olOwOlo/hugo-theme-even.git themes/even 主题被下载到站点目录myblog下的themes/even下。 启动博客 下载完成之后需要把主题even下的./exampleSite/config.toml复制到站点根目录下，这个文件中有博客首页的一些配置项，如“关于”“标签”“分类”等的开关，设置为true或者把注释解开即可在博客上看到该项了。 为了测试文章排版效果，还需要把./exampleSite/content/下的所有文件复制到站点目录的content目录下： [root@web-blog myblog]# cp themes/even/exampleSite/config.toml ./ [root@web-blog myblog]# vim config.toml baseURL = \"https://example.com\" title = \"Your title\" themesDir = \"../..\" theme = \"even\" paginate = 8 [menu] [[menu.main]] identifier = \"home\" name = \"Home\" url = \"/\" weight = 1 [[menu.main]] identifier = \"tags\" name = \"Tags\" url = \"/tags/\" weight = 2 [[menu.main]] identifier = \"about\" name = \"About\" url = \"/about/\" weight = 3 #复制测试文本到站点目录 [root@web-blog myblog]# cp themes/even/exampleSite/content/* ./content [root@web-blog myblog]# ll content total 8 -rw-r--r-- 1 root root 486 May 13 17:02 about.md drwxr-xr-x 2 root root 4096 May 13 17:02 post 启动博客，在myblog目录下键入命令： [root@web-blog myblog]# hugo server Start building sites … | ZH-CN -------------------+-------- Pages | 8 Paginator pages | 0 Non-page files | 0 Static files | 38 Processed images | 0 Aliases | 1 Sitemaps | 1 Cleaned | 0 Built in 39 ms Watching for changes in /opt/myblog/{archetypes,content,data,layouts,static,themes} Watching for config changes in /opt/myblog/config.toml Environment: \"development\" Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop 打开浏览器访问http://localhost:1313/，预览博客网页效果。按Ctrl+C可以停止服务。 写一篇文章 [root@web-blog myblog]# hugo new post/index.md /opt/myblog/content/post/index.md created 生成的 Markdown 文件在myblog/context/post目录下： [root@web-blog myblog]# vim /opt/myblog/content/post/index.md --- title: \"index\" date: 2021-03-30T15:56:50+08:00 draft: true --- 我们可以使用typora一类的Markdown编辑器编写好文章后再复制粘贴进去。 编译博客 预览主题效果满意之后就可以编译了： [root@web-blog myblog]# hugo --theme=even --baseUrl=\"https://YourName.github.io/\" --buildD","date":"2021-05-27","objectID":"/setup-hugo-blog/:0:4","tags":["搭建"],"title":"Hugo+GitHub Action+Github Pages搭建个人博客","uri":"/setup-hugo-blog/"},{"categories":[],"content":"搭建遇到的问题 hugo配置文件参数错误 在本地使用hugo server命令进行本地编译预览时报错: WARN 2020/02/17 20:51:06 found no layout file for \"HTML\" for \"page\": You should create a template file which matches Hugo Layouts Lookup Rules for this combination. 意思为：“找不到用于“页面”的“ HTML”布局文件”。 原因是没有指定所使用的主题。由于hugo new site mysite新建出来的站点目录中，存放主题的目录名为“themes”，导致我以为hugo的站点配置文件config.toml里指定的主题键名为”themes“，而实际应该是“theme”才对，才能正常编译。 [root@web-blog myblog]# vim themes/even/exampleSite/config.toml baseURL = \"http://localhost:1313/\" languageCode = \"en\" defaultContentLanguage = \"en\" # en / zh-cn / ... (This field determines which i18n file to use) title = \"Even - A super concise theme for Hugo\" preserveTaxonomyNames = true enableRobotsTXT = true enableEmoji = true theme = \"even\" 编译成功访问页面没有文章显示 使用hugo new post/index.md新建的文章，是以./archetypes/default.md为模板创建的，默认的draft的值为true，hugo在编译时会忽略所有draft为true的文章，导致编译成功访问站点时发现没有文章显示。 解决办法：文章中draft（草稿）的值需设置为false，或者去掉./archetypes/default.md文件中的draft参数 每次git push之后，刷新站点就显示404 写完文章push到github上之后，再刷新站点会显示404，网页找不到。然后到github pages检查发现之前绑定的域名被清空了。 解决办法：需要在gh-pages.yaml文件中加上cname选项，值为自己的域名。 - name:Deployuses:peaceiris/actions-gh-pages@v3with:github_token:${{ secrets.ACCESS_TOKEN }}publish_dir:./publiccname:domain.com ","date":"2021-05-27","objectID":"/setup-hugo-blog/:0:5","tags":["搭建"],"title":"Hugo+GitHub Action+Github Pages搭建个人博客","uri":"/setup-hugo-blog/"},{"categories":[],"content":"参考链接 Hugo官网：https://gohugo.io/ Hugo中文网：https://www.gohugo.cn/hosting-and-deployment/hosting-on-github/ Hugo中文帮助手册：https://hugo.aiaide.com/ Github Action 官方文档 GitHub Actions 入门教程 ","date":"2021-05-27","objectID":"/setup-hugo-blog/:0:6","tags":["搭建"],"title":"Hugo+GitHub Action+Github Pages搭建个人博客","uri":"/setup-hugo-blog/"},{"categories":[],"content":"Git操作命令总结 git push git push 命用于从将本地的分支版本上传到远程并合并。命令格式如下： git push \u003c远程主机名\u003e \u003c本地分支名\u003e:\u003c远程分支名\u003e 如果本地分支名与远程分支名相同，则可以省略冒号： git push \u003c远程主机名\u003e \u003c本地分支名\u003e git push -f 覆盖远程GitHub仓库的代码，强制推送。主要是为了解决本地仓库内容和远程仓库不一致而导致的push失败报错的问题，（在正常的开发项目中一般不建议这样操作，因为会覆盖所有其他成员提交的代码，只保留你自己的，属于危险操作！）： git push -f origin master #强制推送到origin源 git push -u origin master #正常推送到origin源 git checkout -b main #创建main分支并切换到main分支 git remote -v #查看本地添加的源地址 添加主题：使用git添加子模块的方式添加主题源地址，信息保存在.gitmodule git submodule add https://github.com/halogenica/beautifulhugo.git themes/beautifulhugo ","date":"2021-05-27","objectID":"/setup-hugo-blog/:0:7","tags":["搭建"],"title":"Hugo+GitHub Action+Github Pages搭建个人博客","uri":"/setup-hugo-blog/"}]